[{"/Users/DBrad/Documents/Coding/react-portfolio/main/src/index.js":"1","/Users/DBrad/Documents/Coding/react-portfolio/main/src/reportWebVitals.js":"2","/Users/DBrad/Documents/Coding/react-portfolio/main/src/App.js":"3","/Users/DBrad/Documents/Coding/react-portfolio/main/src/components/Contact.js":"4","/Users/DBrad/Documents/Coding/react-portfolio/main/src/components/Header.js":"5","/Users/DBrad/Documents/Coding/react-portfolio/main/src/components/Resume.js":"6","/Users/DBrad/Documents/Coding/react-portfolio/main/src/components/Home.js":"7","/Users/DBrad/Documents/Coding/react-portfolio/main/src/components/Portfolio.js":"8","/Users/DBrad/Documents/Coding/react-portfolio/main/src/components/About.js":"9","/Users/DBrad/Documents/Coding/react-portfolio/main/src/components/Footer.js":"10","/Users/DBrad/Documents/Coding/react-portfolio/main/src/utils/helpers.js":"11"},{"size":500,"mtime":1634696050826,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":1634694084092,"results":"14","hashOfConfig":"13"},{"size":1037,"mtime":1635047613829,"results":"15","hashOfConfig":"13"},{"size":3561,"mtime":1635269901584,"results":"16","hashOfConfig":"13"},{"size":1369,"mtime":1635198967514,"results":"17","hashOfConfig":"13"},{"size":941,"mtime":1635215790737,"results":"18","hashOfConfig":"13"},{"size":446,"mtime":1635182647561,"results":"19","hashOfConfig":"13"},{"size":6279,"mtime":1635185329040,"results":"20","hashOfConfig":"13"},{"size":1358,"mtime":1635194520172,"results":"21","hashOfConfig":"13"},{"size":537,"mtime":1635198551247,"results":"22","hashOfConfig":"13"},{"size":399,"mtime":1635264832021,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1rvtu94",{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"/Users/DBrad/Documents/Coding/react-portfolio/main/src/index.js",[],["51","52"],"/Users/DBrad/Documents/Coding/react-portfolio/main/src/reportWebVitals.js",[],"/Users/DBrad/Documents/Coding/react-portfolio/main/src/App.js",[],"/Users/DBrad/Documents/Coding/react-portfolio/main/src/components/Contact.js",["53","54"],"import React,{ useState } from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport {  validateEmail } from '../utils/helpers';\n\nconst Contact = () => {\n  // Create state variables for the fields in the form\n  // We are also setting their initial values to an empty string\n  const [email, setEmail] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const [hasBlur, setBlur] = useState('');\n\n  const handleInputChange = (e) => {\n    // Getting the value and name of the input which triggered the change\n    const { target } = e;\n    const inputType = target.name;\n    const inputValue = target.value;\n    if (inputType === 'email') {\n      setEmail(inputValue);\n    }\n  };\n\n  // const handleFormBlur = (e) => {\n  // }\n  \n\n  const handleFormSubmit = (e) => {\n    e.preventDefault();\n    if (!validateEmail(email)) {\n      setErrorMessage('Email is invalid. Please try again!');\n      return;\n    } else { setErrorMessage(false)}\n    \n    setEmail('')\n  };\n\n  return ( \n\n<Container fluid=\"md bg-dark bg-opacity-75 mt-5 mb-5 contact-container \">\n\n    <h1 class=\"display-4 text-light text-center\">Contact Daniel</h1>\n    <Row >\n    <Col sm={6}>\n    <div className=\"contact-list text-light bg-opacity-25\">\n    <h2 >Email</h2>\n    <p class=\"lead text-light\">danielbvideo@gmail.com</p>\n    <h2 >Phone</h2>\n    <p class=\"lead text-light\">828-585-1884</p>\n    <h2 >GitHub</h2>\n    <p class=\"lead text-light\">https://github.com/WebDeverDan</p>\n    <h2 >Design Portfolio</h2>\n    <p class=\"lead text-light\">www.danielbvideo.com</p>\n    </div>\n    </Col>\n    <Col sm={5}>\n    <div className=\"contact-form text-light\">\n    <h2 >Leave a Comment!</h2>\n    \n    <label for='full-name'>Full Name</label>\n        <input\n          type='text'\n          class='form-control fst-italic'\n          id='full-name'\n          placeholder=\"Full Name\"\n          onFocus={(e) => e.target.placeholder = \"\"} \n          onBlur={(e) => e.target.placeholder = \"Don't forget your name!\"} \n          required\n        />\n         <label for='email-address'>Email Address</label>\n        <input\n          type='email'\n          value={email}\n          name='email'\n          class='form-control fst-italic'\n          id='email-address'\n          placeholder='Email Address'\n          onChange={handleInputChange}\n          onFocus={(e) => e.target.placeholder = \"\"} \n          onBlur={(e) => e.target.placeholder = \"Don't forget your email!\"}\n          />\n          {errorMessage && (\n        <div>\n          <p className=\"error-text\">{errorMessage}</p>\n        </div>\n      )}\n        <label for='first-name'>Phone Number</label>\n        <input\n          type='text'\n          class='form-control fst-italic'\n          id='phone-number'\n          placeholder='Phone Number'\n          onFocus={(e) => e.target.placeholder = \"\"} \n          onBlur={(e) => e.target.placeholder = \"Don't forget your number!\"}\n          required\n        />\n        <label for='comment'>Leave a Comment</label>\n        <input\n          type='text'\n          class='form-control fst-italic pb-5'\n          id='comment'\n          placeholder='Comment'\n          onFocus={(e) => e.target.placeholder = \"\"} \n          onBlur={(e) => e.target.placeholder = \"Enter a comment if you want!\"}\n          required\n        />\n        <div className=\"submitB\">\n        <a className=\"navbar-brand enter-btn mt-1\" href=\"/contact\" onClick={handleFormSubmit}> Submit</a>\n        </div>\n        \n    </div>\n    \n    </Col>\n    \n    \n    \n</Row>\n</Container>\n  );\n};\n\n  \n\n\n\n\nexport default Contact;","/Users/DBrad/Documents/Coding/react-portfolio/main/src/components/Header.js",[],"/Users/DBrad/Documents/Coding/react-portfolio/main/src/components/Resume.js",["55"],"import React from 'react';\nimport Resume2 from '../Images/Daniel Bradley Resume (1).pdf';\nimport { Container } from 'react-bootstrap';\n\nconst Resume = () => {\n  return (\n    // <div class=\"container bg-dark bg-opacity-50 portfolio-container mt-5 mb-5\">\n    <Container fluid=\"lg bg-dark bg-opacity-75 mt-5 mb-5 resume-container\">\n      <h1 class=\"display-4 text-light text-center\">Resume</h1>\n      <iframe src={Resume2} width=\"100%\" height=\"500px \">\n    </iframe>\n    <h2 class=\"lead display-4 text-light mt-3\">Front End Skills</h2>\n    <p class=\"lead text-light display-6\">HTML5, CSS, JQuery, JavaScript, Bootstrap, Materialize, Bulma, React, Handlebars.</p>\n    <h2 class=\"lead display-4 text-light\">Back End Skills</h2>\n    <p class=\"lead text-light display-6 mb-3\">Node.js, Express.js, MySQL, Sequelize, MongoDB, GraphQL, authentication and varification.</p>\n      \n    </Container >\n      // </div>\n    \n  );\n};\n\nexport default Resume;\n","/Users/DBrad/Documents/Coding/react-portfolio/main/src/components/Home.js",[],"/Users/DBrad/Documents/Coding/react-portfolio/main/src/components/Portfolio.js",["56"],"import React from 'react';\nimport Gamer from '../Images/gamernew.png';\nimport Weather from '../Images/Weather2.png';\nimport Lego from '../Images/Lego2.png';\nimport Beer from '../Images/beer.png';\nimport Planner from '../Images/planner.png';\nimport Fitness from '../Images/fitness-tracker.png';\nimport {Container} from 'react-bootstrap'\n\nconst Portfolio = () => {\n  return (\n    <Container className=\"bg-dark bg-opacity-75 portfolio-container mt-5 mb-5\">\n      <h1 class=\"display-4 text-light text-center\">Web Portfolio</h1>\n\n      <div class=\"row\">\n        <div class=\"col-lg-6 mb-4\">\n          <div class=\"card h-100 project-box m-2 border border-dark\">\n            <img class=\"card-img-top \" src={Lego} alt=\"\" />\n            <div class=\"card-body\">\n              <h4 class=\"card-title\">\n                <a\n                  className=\"portfolio-title\"\n                  href=\"https://the-lego-collector.herokuapp.com/\"\n                >\n                  The Lego Collector\n                </a>\n              </h4>\n              <p class=\"card-text\">\n                The Lego Collector is an independent project aimed for\n                collectors to inventory and keep track of, and calculate the\n                value of their Lego collection. Users have the option to add,\n                update, and delete figures and sets. Mobile view is currently in\n                development.\n              </p>\n              <p>\n                Technologies used: HTML5, CSS6, Javascript, JQuery,\n                Handlebars.js, Node.js, Express.js, and MySQL.\n              </p>\n            </div>\n          </div>\n        </div>\n        <div class=\"col-lg-6 mb-4\">\n          <div class=\"card h-100 project-box m-2 border border-dark\">\n            <img class=\"card-img-top\" src={Gamer} alt=\"\" />\n            <div class=\"card-body\">\n              <h4 class=\"card-title\">\n                <a\n                  className=\"portfolio-title\"\n                  href=\"https://webdeverdan.github.io/Confused-Gamer/\"\n                >\n                  Confused Gamer\n                </a>\n              </h4>\n              <p class=\"card-text\">\n                An application designed to give users the abilty to find a new\n                video game based on platform selection. Also allows user to save\n                games to a favorite list so they can return to view the list at\n                a later date.\n              </p>\n              <p>\n                Technologies used: HTML5, CSS6, Javascript, JQuery, and Giant\n                Bomb API.\n              </p>\n            </div>\n          </div>\n        </div>\n        <div class=\"col-lg-6 mb-4\">\n          <div class=\"card h-100 project-box m-2 border border-dark\">\n            <img class=\"card-img-top\" src={Weather} alt=\"\" />\n            <div class=\"card-body\">\n              <h4 class=\"card-title\">\n                <a\n                  className=\"portfolio-title\"\n                  href=\"https://webdeverdan.github.io/Weather-Dashboard/\"\n                >\n                  Weather Dashboard\n                </a>\n              </h4>\n              <p class=\"card-text\">\n                A simple weather searching application that allows users to find\n                the weather of a city. It provides current and 5 day weather\n                forecasts, and UV Index.\n              </p>\n              <p>\n                Technologies used:Technologies used: HTML5, CSS6, Javascript,\n                JQuery, and OpenWeather API.{' '}\n              </p>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"col-lg-6 mb-4\">\n          <div class=\"card h-100 project-box m-2 border border-dark\">\n            <img class=\"card-img-top\" src={Beer} alt=\"\" />\n            <div class=\"card-body\">\n              <h4 class=\"card-title\">\n                <a\n                  className=\"portfolio-title\"\n                  href=\"https://frozen-inlet-56976.herokuapp.com/login\"\n                >\n                  Mix 'n' Match\n                </a>\n              </h4>\n              <p class=\"card-text\">\n                A dating/friendship web application that matches users based on\n                beer preference. Features validation to enhance security and\n                user experience. Future development includes more customizable\n                matching functionality.\n              </p>\n              <p>\n                Technologies used: HTML5, CSS6, Javascript, JQuery,\n                Handlebars.js, Node.js, Express.js, Cloudinary, Multer, and MySQL.\n              </p>\n            </div>\n          </div>\n        </div>\n        <div class=\"col-lg-6 mb-4\">\n          <div class=\"card h-100 project-box m-2 border border-dark\">\n            <img class=\"card-img-top\" src={Planner} alt=\"\" />\n            <div class=\"card-body\">\n              <h4 class=\"card-title\">\n                <a className=\"portfolio-title\" href=\"#\">\n                  Daily Planner\n                </a>\n              </h4>\n              <p class=\"card-text\">\n                A simple day planning app that allows users to add and delete\n                notes. The color scheme changes based on the time of the day to\n                better visualize each hour\n              </p>\n              <p>Technologies used: HTML5, CSS6, & Javascript</p>\n            </div>\n          </div>\n        </div>\n        <div class=\"col-lg-6 mb-4\">\n          <div class=\"card h-100 project-box m-2 border border-dark\">\n            <img class=\"card-img-top\" src={Fitness} alt=\"\" />\n            <div class=\"card-body\">\n              <h4 class=\"card-title\">\n                <a\n                  className=\"portfolio-title\"\n                  href=\"https://rocky-everglades-83809.herokuapp.com/?id=6169e181daaa4f00169ba7da\"\n                >\n                  Fitness Tracker\n                </a>\n              </h4>\n              <p class=\"card-text\">\n                A fitness plan tracker which allows the user to add a new\n                workout, edit that workout, and afterwards see the aggregated\n                statistics from the week.\n              </p>\n              <p>Technologies used: HTML5, CSS6, Javascript, MongoDB.</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Container>\n  );\n};\n\nexport default Portfolio;\n","/Users/DBrad/Documents/Coding/react-portfolio/main/src/components/About.js",["57"],"import React from 'react';\nimport Daniel from '../Images/Daniel_Bradley.jpg'\nimport { Container, Row, Col } from 'react-bootstrap';\n\nconst About = () => {\n \n  return (\n   \n<Container fluid=\"md bg-dark bg-opacity-75 mt-5 mb-5 about-info\">\n{/* <div class=\"container bg-dark bg-opacity-50 portfolio-container mt-5 mb-5\"> */}\n    <h1 class=\"display-5 text-light text-center\">About Daniel</h1>\n    <Row className=\"justify-content-center about-details\">\n    {/* <div className=\"about-content container-fluid bg-opacity-50\"> */}\n    <Col sm={8}>\n    <p class=\"lead text-light display-10\" style={{fontSize: 25}}>I am a full stack web developer with a front-end focus, and carry a background in visual media production, business, and client relations. While currently seeking a career change, I am bringing my strong design background, knack for user experience, and understanding of full stack web application development to the table.</p>\n    <p class=\"lead text-light mt-2\" style={{fontSize: 25}}>When I'm not coding, I enjoy photography, running, and rollerblading with my dog, Annie. I look forward to exploring future projects with you!</p>\n\n    </Col>\n    <Col sm={3}>\n    <img src={Daniel} alt=\"image of Daniel who is wearing a green shirt\" className=\"Daniel mb-5\"/>\n    </Col>\n    </Row>\n    {/* </div> */}\n    \n</Container>\n  );\n};\n\n\n\n\nexport default About;","/Users/DBrad/Documents/Coding/react-portfolio/main/src/components/Footer.js",[],"/Users/DBrad/Documents/Coding/react-portfolio/main/src/utils/helpers.js",[],{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":10,"column":10,"nodeType":"64","messageId":"65","endLine":10,"endColumn":17},{"ruleId":"62","severity":1,"message":"66","line":10,"column":19,"nodeType":"64","messageId":"65","endLine":10,"endColumn":26},{"ruleId":"67","severity":1,"message":"68","line":10,"column":7,"nodeType":"69","endLine":10,"endColumn":58},{"ruleId":"70","severity":1,"message":"71","line":122,"column":17,"nodeType":"69","endLine":122,"endColumn":57},{"ruleId":"72","severity":1,"message":"73","line":20,"column":5,"nodeType":"69","endLine":20,"endColumn":99},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"no-unused-vars","'hasBlur' is assigned a value but never used.","Identifier","unusedVar","'setBlur' is assigned a value but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","no-global-assign","no-unsafe-negation"]