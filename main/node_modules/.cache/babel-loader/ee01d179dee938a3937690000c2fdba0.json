{"ast":null,"code":"var _jsxFileName = \"/Users/DBrad/Documents/Coding/react-portfolio/main/src/components/Contact.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { validateEmail } from '../utils/helpers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Contact = () => {\n  _s();\n\n  // Create state variables for the fields in the form\n  // We are also setting their initial values to an empty string\n  const [email, setEmail] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const handleInputChange = e => {\n    // Getting the value and name of the input which triggered the change\n    const {\n      target\n    } = e;\n    const inputType = target.name;\n    const inputValue = target.value; // Based on the input type, we set the state of either email, username, and password\n\n    if (inputType === 'email') {\n      setEmail(inputValue); // } else if (inputType === 'userName') {\n      //   setUserName(inputValue);\n      // } else {\n      //   setPassword(inputValue);\n      // }\n    }\n\n    ;\n\n    const handleFormSubmit = e => {\n      // Preventing the default behavior of the form submit (which is to refresh the page)\n      e.preventDefault(); // First we check to see if the email is not valid or if the userName is empty. If so we set an error message to be displayed on the page.\n\n      if (!validateEmail(email) || !userName) {\n        setErrorMessage('Email or username is invalid'); // We want to exit out of this code block if something is wrong so that the user can correct it\n\n        return; // Then we check to see if the password is not valid. If so, we set an error message regarding the password.\n      }\n\n      return;\n    }; // If everything goes according to plan, we want to clear out the input after a successful registration.\n\n\n    setUserName('');\n    setPassword('');\n    setEmail('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: \"md bg-dark bg-opacity-75 mt-5 mb-5 contact-container \",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      class: \"display-4 text-light text-center\",\n      children: \"Contact Daniel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        sm: 6,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"contact-list text-light bg-opacity-25\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            class: \"lead text-light\",\n            children: \"danielbvideo@gmail.com\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Phone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            class: \"lead text-light\",\n            children: \"828-585-1884\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"GitHub\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            class: \"lead text-light\",\n            children: \"https://github.com/WebDeverDan\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Design Portfolio\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            class: \"lead text-light\",\n            children: \"www.danielbvideo.com\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        sm: 5,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"contact-form text-light\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Leave a Comment!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"full-name\",\n            children: \"Full Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            class: \"form-control fst-italic\",\n            id: \"full-name\",\n            placeholder: \"Full Name\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"email-address\",\n            children: \"Email Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 10\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            value: email,\n            class: \"form-control fst-italic\",\n            id: \"email-address\",\n            placeholder: \"Email Address\",\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"first-name\",\n            children: \"Phone Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            class: \"form-control fst-italic\",\n            id: \"phone-number\",\n            placeholder: \"Phone Number\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"comment\",\n            children: \"Leave a Comment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            class: \"form-control fst-italic pb-5\",\n            id: \"comment\",\n            placeholder: \"Comment\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"submitB\",\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              className: \"navbar-brand enter-btn mt-1\",\n              onClick: handleFormSubmit,\n              children: \" Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 9\n          }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"error-text\",\n              children: errorMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 1\n  }, this);\n};\n\n_s(Contact, \"C3syZdGGqxYAxGBv6UWl7KmJtRE=\");\n\n_c = Contact;\nexport default Contact;\n\nvar _c;\n\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"sources":["/Users/DBrad/Documents/Coding/react-portfolio/main/src/components/Contact.js"],"names":["React","useState","Container","Row","Col","validateEmail","Contact","email","setEmail","errorMessage","setErrorMessage","handleInputChange","e","target","inputType","name","inputValue","value","handleFormSubmit","preventDefault","userName","setUserName","setPassword"],"mappings":"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","sourcesContent":["import React,{ useState } from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport {  validateEmail } from '../utils/helpers';\n\nconst Contact = () => {\n  // Create state variables for the fields in the form\n  // We are also setting their initial values to an empty string\n  const [email, setEmail] = useState('');\n  \n  const [errorMessage, setErrorMessage] = useState('');\n\n  const handleInputChange = (e) => {\n    // Getting the value and name of the input which triggered the change\n    const { target } = e;\n    const inputType = target.name;\n    const inputValue = target.value;\n\n    // Based on the input type, we set the state of either email, username, and password\n    if (inputType === 'email') {\n      setEmail(inputValue);\n    // } else if (inputType === 'userName') {\n    //   setUserName(inputValue);\n    // } else {\n    //   setPassword(inputValue);\n    // }\n  };\n\n  const handleFormSubmit = (e) => {\n    // Preventing the default behavior of the form submit (which is to refresh the page)\n    e.preventDefault();\n\n    // First we check to see if the email is not valid or if the userName is empty. If so we set an error message to be displayed on the page.\n    if (!validateEmail(email) || !userName) {\n      setErrorMessage('Email or username is invalid');\n      // We want to exit out of this code block if something is wrong so that the user can correct it\n      return;\n      // Then we check to see if the password is not valid. If so, we set an error message regarding the password.\n    }\n    \n      return;\n    }\n  \n\n    // If everything goes according to plan, we want to clear out the input after a successful registration.\n    setUserName('');\n    setPassword('');\n    setEmail('');\n  };\n\n  return ( \n\n<Container fluid=\"md bg-dark bg-opacity-75 mt-5 mb-5 contact-container \">\n\n    <h1 class=\"display-4 text-light text-center\">Contact Daniel</h1>\n    <Row >\n    <Col sm={6}>\n    <div className=\"contact-list text-light bg-opacity-25\">\n    <h2 >Email</h2>\n    <p class=\"lead text-light\">danielbvideo@gmail.com</p>\n    <h2 >Phone</h2>\n    <p class=\"lead text-light\">828-585-1884</p>\n    <h2 >GitHub</h2>\n    <p class=\"lead text-light\">https://github.com/WebDeverDan</p>\n    <h2 >Design Portfolio</h2>\n    <p class=\"lead text-light\">www.danielbvideo.com</p>\n    </div>\n    </Col>\n    <Col sm={5}>\n    <div className=\"contact-form text-light\">\n    <h2 >Leave a Comment!</h2>\n    \n    <label for='full-name'>Full Name</label>\n        <input\n          type='text'\n          class='form-control fst-italic'\n          id='full-name'\n          placeholder=\"Full Name\"\n          required\n        />\n         <label for='email-address'>Email Address</label>\n        <input\n          type='email'\n          value={email}\n          class='form-control fst-italic'\n          id='email-address'\n          placeholder='Email Address'\n          onChange={handleInputChange}\n          />\n        <label for='first-name'>Phone Number</label>\n        <input\n          type='text'\n          class='form-control fst-italic'\n          id='phone-number'\n          placeholder='Phone Number'\n          required\n        />\n        <label for='comment'>Leave a Comment</label>\n        <input\n          type='text'\n          class='form-control fst-italic pb-5'\n          id='comment'\n          placeholder='Comment'\n          required\n        />\n        <div className=\"submitB\">\n        <a className=\"navbar-brand enter-btn mt-1\" onClick={handleFormSubmit} > Submit</a>\n        </div>\n        {errorMessage && (\n        <div>\n          <p className=\"error-text\">{errorMessage}</p>\n        </div>\n      )}\n    </div>\n    \n    </Col>\n    \n    \n    \n</Row>\n</Container>\n  );\n};\n\n  \n\n\n\n\nexport default Contact;"]},"metadata":{},"sourceType":"module"}